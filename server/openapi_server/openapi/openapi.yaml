openapi: 3.0.3
info:
  contact:
    email: team@nlpsandbox.io
    name: NLP Sandbox Team
    url: https://nlpsandbox.io
  description: |
    # Overview

    The NLP Sandbox Data Node is a repository of data used to benchmark NLP
    Tools like the NLP Sandbox Date Annotator and Person Name Annotator.

    The resources that can be stored in this Data Node and the operations
    supported are listed below:

    - Create and manage datasets - Create and manage FHIR stores
      - Store and retrieve FHIR patient profiles
      - Store and retrieve clinical
      notes
    - Create and manage annotation stores
      - Store and retrieve text annotations
  license:
    name: Apache 2.0
    url: https://github.com/nlpsandbox/nlpsandbox-schemas/blob/main/LICENSE
  title: NLP Sandbox Data Node API
  version: 1.2.0
  x-logo:
    url: https://github.com/nlpsandbox/nlpsandbox-schemas/raw/main/docs/logo.png
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
tags:
- description: Operations about annotations
  name: Annotation
- description: Operations about annotation stores
  name: AnnotationStore
- description: Operations about datasets
  name: Dataset
- description: Operations about FHIR stores
  name: FhirStore
- description: Operations about health checks
  name: HealthCheck
- description: Operations about notes
  name: Note
- description: Operations about patients
  name: Patient
paths:
  /datasets:
    get:
      description: Returns the datasets
      operationId: list_datasets
      parameters:
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDatasets'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get all datasets
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    post:
      description: Create a dataset with the name specified
      operationId: create_dataset
      parameters:
      - description: The ID of the dataset that is being created
        explode: true
        in: query
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create a dataset
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /datasets/{datasetId}:
    delete:
      description: Deletes the dataset for a given ID
      operationId: delete_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
    get:
      description: Returns the dataset for a given ID
      operationId: get_dataset
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get a dataset by ID
      tags:
      - Dataset
      x-openapi-router-controller: openapi_server.controllers.dataset_controller
  /datasets/{datasetId}/annotationStores:
    get:
      description: Returns the annotation stores
      operationId: list_annotation_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotationStores'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: List the annotation stores in a dataset
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    post:
      description: Create an annotation store with the ID specified
      operationId: create_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store that is being created.
        explode: true
        in: query
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationStoreCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStoreCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}:
    delete:
      description: Deletes the annotation store specified
      operationId: delete_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
    get:
      description: Returns the annotation store specified
      operationId: get_annotation_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationStore'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get an annotation store
      tags:
      - AnnotationStore
      x-openapi-router-controller: openapi_server.controllers.annotation_store_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations:
    get:
      description: Returns the annotations in an annotation store
      operationId: list_annotations
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnnotations'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: List the annotations in an annotation store
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    post:
      description: Create an annotation
      operationId: create_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationStoreId'
        style: simple
      - description: The ID of the annotation that is being created
        explode: true
        in: query
        name: annotationId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}:
    delete:
      description: Deletes the annotation specified
      operationId: delete_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the annotation
        explode: false
        in: path
        name: annotationId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
    get:
      description: Returns the annotation specified
      operationId: get_annotation
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the annotation store
        explode: false
        in: path
        name: annotationStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the annotation
        explode: false
        in: path
        name: annotationId
        required: true
        schema:
          $ref: '#/components/schemas/AnnotationId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get an annotation
      tags:
      - Annotation
      x-openapi-router-controller: openapi_server.controllers.annotation_controller
  /datasets/{datasetId}/fhirStores:
    get:
      description: Returns the FHIR stores
      operationId: list_fhir_stores
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfFhirStores'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: List the FHIR stores in a dataset
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
    post:
      description: Create a FHIR store with the ID specified
      operationId: create_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store that is being created.
        explode: true
        in: query
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FhirStoreCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FhirStoreCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}:
    delete:
      description: Deletes the FHIR store specified
      operationId: delete_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
    get:
      description: Returns the FHIR store specified
      operationId: get_fhir_store
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FhirStore'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get a FHIR store
      tags:
      - FhirStore
      x-openapi-router-controller: openapi_server.controllers.fhir_store_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Note:
    get:
      description: Returns the notes in a FHIR store
      operationId: list_notes
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfNotes'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: List notes
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    post:
      description: Create a note
      operationId: create_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the note that is being created
        explode: true
        in: query
        name: noteId
        required: true
        schema:
          $ref: '#/components/schemas/NoteId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Note/{noteId}:
    delete:
      description: Deletes the note specified
      operationId: delete_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          $ref: '#/components/schemas/NoteId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
    get:
      description: Returns the note specified
      operationId: get_note
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the note
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          $ref: '#/components/schemas/NoteId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get a note
      tags:
      - Note
      x-openapi-router-controller: openapi_server.controllers.note_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient:
    get:
      description: Returns the Patients in a FHIR store
      operationId: list_patients
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: Maximum number of results returned
        explode: true
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
        style: form
      - description: Index of the first result that must be returned
        explode: true
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/PageOffset'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfPatients'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: List the Patients in a FHIR store
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    post:
      description: Create a FHIR patient
      operationId: create_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the patient that is being created
        explode: true
        in: query
        name: patientId
        required: true
        schema:
          $ref: '#/components/schemas/PatientId'
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCreateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Create a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Patient/{patientId}:
    delete:
      description: Deletes the FHIR patient specified
      operationId: delete_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the FHIR patient
        explode: false
        in: path
        name: patientId
        required: true
        schema:
          $ref: '#/components/schemas/PatientId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Delete a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
    get:
      description: Returns the FHIR patient specified
      operationId: get_patient
      parameters:
      - description: The ID of the dataset
        explode: false
        in: path
        name: datasetId
        required: true
        schema:
          $ref: '#/components/schemas/DatasetId'
        style: simple
      - description: The ID of the FHIR store
        explode: false
        in: path
        name: fhirStoreId
        required: true
        schema:
          $ref: '#/components/schemas/FhirStoreId'
        style: simple
      - description: The ID of the FHIR patient
        explode: false
        in: path
        name: patientId
        required: true
        schema:
          $ref: '#/components/schemas/PatientId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - ApiKeyAuth: []
      summary: Get a FHIR patient
      tags:
      - Patient
      x-openapi-router-controller: openapi_server.controllers.patient_controller
  /healthCheck:
    get:
      description: Get information about the health of the service
      operationId: get_health_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get health check information
      tags:
      - HealthCheck
      x-openapi-router-controller: openapi_server.controllers.health_check_controller
components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request cannot be fulfilled due to an unexpected server error
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The request conflicts with current state of the target resource
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
  schemas:
    PageLimit:
      default: 10
      description: The maximum number of results returned
      maximum: 100
      minimum: 10
      type: integer
    PageOffset:
      default: 0
      description: The index of the first result that must be returned
      minimum: 0
      type: integer
    ResponsePageMetadata:
      description: A page of results
      properties:
        offset:
          default: 0
          description: The index of the first result that must be returned
          minimum: 0
          type: integer
        limit:
          default: 10
          description: The maximum number of results returned
          maximum: 100
          minimum: 10
          type: integer
        links:
          $ref: '#/components/schemas/ResponsePageMetadata_links'
        totalResults:
          description: The total number of results in the result set
          type: integer
      required:
      - links
      - totalResults
      type: object
    DatasetName:
      description: The name of the dataset
      example: datasets/awesome-dataset
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    Dataset:
      description: A dataset
      example:
        name: datasets/awesome-dataset
      properties:
        name:
          description: The name of the dataset
          example: datasets/awesome-dataset
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    PageOfDatasets:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfDatasets_allOf'
      description: A page of datasets
      type: object
    Error:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
    DatasetId:
      description: The ID of the dataset
      example: awesome-dataset
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    DatasetCreateRequest:
      description: An empty object
      type: object
    DatasetCreateResponse:
      description: The reference of the dataset created
      example:
        name: datasets/awesome-dataset
      properties:
        name:
          description: The name of the dataset
          example: datasets/awesome-dataset
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    EmptyObject:
      description: An empty object
      type: object
    AnnotationStoreName:
      description: The resource name of the annotation store, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}
      example: datasets/awesome-dataset/annotationStores/awesome-annotation-store
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    AnnotationStore:
      description: An annotation store
      example:
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store
      properties:
        name:
          description: The resource name of the annotation store, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    PageOfAnnotationStores:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfAnnotationStores_allOf'
      description: A page of annotation stores
      type: object
    AnnotationStoreId:
      description: The ID of the annotation store
      example: awesome-annotation-store
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    AnnotationStoreCreateRequest:
      description: An empty object
      type: object
    AnnotationStoreCreateResponse:
      description: The reference to the annotation store created
      example:
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store
      properties:
        name:
          description: The resource name of the annotation store, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    AnnotationName:
      description: The resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
      example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/awesome-annotation
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*/annotations/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    ResourceSource:
      description: An API resource source
      example:
        name: name
      properties:
        name:
          description: Full path of an API resource
          type: string
      required:
      - name
      type: object
    AnnotationSource:
      description: The source of an annotation record
      example:
        resourceSource:
          name: name
      maxProperties: 1
      properties:
        resourceSource:
          $ref: '#/components/schemas/ResourceSource'
      required:
      - resourceSource
      type: object
    TextAnnotation:
      description: An annotation in a text
      example:
        start: 42
        length: 19
        text: the annotation text
        confidence: 95.5
      properties:
        start:
          description: The position of the first character
          type: integer
        length:
          description: The length of the annotation
          type: integer
        text:
          description: The string annotated
          type: string
        confidence:
          description: The confidence in the accuracy of the annotation
          format: float
          maximum: 100
          minimum: 0
          type: number
      required:
      - confidence
      - length
      - start
      - text
      type: object
    TextDateAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextDateAnnotation_allOf'
      description: A date annotation in a text
      example:
        start: 42
        length: 10
        text: 10/26/2020
        dateFormat: MM/DD/YYYY
        confidence: 95.5
      type: object
    TextPersonNameAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      description: A person name annotation in a text
      example:
        start: 42
        length: 11
        text: Chloe Price
        confidence: 95.5
      type: object
    TextLocationAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextLocationAnnotation_allOf'
      description: A location annotation in a text
      example:
        start: 42
        length: 7
        text: Seattle
        locationType: city
        confidence: 95.5
      type: object
    TextIdAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextIdAnnotation_allOf'
      description: An ID annotation in a text
      example:
        start: 42
        length: 11
        text: 203-11-4535
        idType: ssn
        confidence: 95.5
      type: object
    TextContactAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextContactAnnotation_allOf'
      description: A contact annotation in a text
      example:
        start: 42
        length: 11
        text: dave@uw.edu
        contactType: email
        confidence: 95.5
      type: object
    TextCovidSymptomAnnotation:
      allOf:
      - $ref: '#/components/schemas/TextAnnotation'
      - $ref: '#/components/schemas/TextCovidSymptomAnnotation_allOf'
      description: A COVID symptom annotation in a text
      example:
        start: 42
        length: 9
        text: dry cough
        condition: cough
        certainty: positive
        confidence: 95.5
      type: object
    Annotation:
      description: An annotation record
      example:
        textDateAnnotations:
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
          confidence: 95.5
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
          confidence: 95.5
        textCovidSymptomAnnotations:
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
        textPersonNameAnnotations:
        - start: 42
          length: 11
          text: Chloe Price
          confidence: 95.5
        - start: 42
          length: 11
          text: Chloe Price
          confidence: 95.5
        textLocationAnnotations:
        - start: 42
          length: 7
          text: Seattle
          locationType: city
          confidence: 95.5
        - start: 42
          length: 7
          text: Seattle
          locationType: city
          confidence: 95.5
        annotationSource:
          resourceSource:
            name: name
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/awesome-annotation
        textIdAnnotations:
        - start: 42
          length: 11
          text: 203-11-4535
          idType: ssn
          confidence: 95.5
        - start: 42
          length: 11
          text: 203-11-4535
          idType: ssn
          confidence: 95.5
        textContactAnnotations:
        - start: 42
          length: 11
          text: dave@uw.edu
          contactType: email
          confidence: 95.5
        - start: 42
          length: 11
          text: dave@uw.edu
          contactType: email
          confidence: 95.5
      properties:
        name:
          description: The resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/awesome-annotation
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*/annotations/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        annotationSource:
          $ref: '#/components/schemas/AnnotationSource'
        textDateAnnotations:
          description: Date annotations in a text
          items:
            $ref: '#/components/schemas/TextDateAnnotation'
          type: array
        textPersonNameAnnotations:
          description: Person name annotations in a text
          items:
            $ref: '#/components/schemas/TextPersonNameAnnotation'
          type: array
        textLocationAnnotations:
          description: Location annotations in a text
          items:
            $ref: '#/components/schemas/TextLocationAnnotation'
          type: array
        textIdAnnotations:
          description: ID annotations in a text
          items:
            $ref: '#/components/schemas/TextIdAnnotation'
          type: array
        textContactAnnotations:
          description: Contact annotations in a text
          items:
            $ref: '#/components/schemas/TextContactAnnotation'
          type: array
        textCovidSymptomAnnotations:
          description: COVID symptom annotations in a text
          items:
            $ref: '#/components/schemas/TextCovidSymptomAnnotation'
          type: array
      required:
      - annotationSource
      - name
      type: object
    PageOfAnnotations:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfAnnotations_allOf'
      description: A page of annotations
      type: object
    AnnotationId:
      description: The ID of the annotation
      example: awesome-annotation
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    AnnotationCreateRequest:
      description: An annotation record
      example:
        textDateAnnotations:
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
          confidence: 95.5
        - start: 42
          length: 10
          text: 10/26/2020
          dateFormat: MM/DD/YYYY
          confidence: 95.5
        textCovidSymptomAnnotations:
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
        - start: 42
          length: 9
          text: dry cough
          condition: cough
          certainty: positive
          confidence: 95.5
        textPersonNameAnnotations:
        - start: 42
          length: 11
          text: Chloe Price
          confidence: 95.5
        - start: 42
          length: 11
          text: Chloe Price
          confidence: 95.5
        textLocationAnnotations:
        - start: 42
          length: 7
          text: Seattle
          locationType: city
          confidence: 95.5
        - start: 42
          length: 7
          text: Seattle
          locationType: city
          confidence: 95.5
        annotationSource:
          resourceSource:
            name: name
        textIdAnnotations:
        - start: 42
          length: 11
          text: 203-11-4535
          idType: ssn
          confidence: 95.5
        - start: 42
          length: 11
          text: 203-11-4535
          idType: ssn
          confidence: 95.5
        textContactAnnotations:
        - start: 42
          length: 11
          text: dave@uw.edu
          contactType: email
          confidence: 95.5
        - start: 42
          length: 11
          text: dave@uw.edu
          contactType: email
          confidence: 95.5
      properties:
        annotationSource:
          $ref: '#/components/schemas/AnnotationSource'
        textDateAnnotations:
          description: Date annotations in a text
          items:
            $ref: '#/components/schemas/TextDateAnnotation'
          type: array
        textPersonNameAnnotations:
          description: Person name annotations in a text
          items:
            $ref: '#/components/schemas/TextPersonNameAnnotation'
          type: array
        textLocationAnnotations:
          description: Location annotations in a text
          items:
            $ref: '#/components/schemas/TextLocationAnnotation'
          type: array
        textIdAnnotations:
          description: ID annotations in a text
          items:
            $ref: '#/components/schemas/TextIdAnnotation'
          type: array
        textContactAnnotations:
          description: Contact annotations in a text
          items:
            $ref: '#/components/schemas/TextContactAnnotation'
          type: array
        textCovidSymptomAnnotations:
          description: COVID symptom annotations in a text
          items:
            $ref: '#/components/schemas/TextCovidSymptomAnnotation'
          type: array
      required:
      - annotationSource
      type: object
    AnnotationCreateResponse:
      description: The reference to the annotation created
      example:
        name: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/awesome-annotation
      properties:
        name:
          description: The resource name of the annotation record, of the form datasets/{datasetId}/annotationStores/{annotationStoreId}/annotations/{annotationId}
          example: datasets/awesome-dataset/annotationStores/awesome-annotation-store/annotations/awesome-annotation
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/annotationStores/[a-z0-9]+(?:-[a-z0-9]+)*/annotations/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    FhirStoreId:
      description: The ID of the FHIR store
      example: awesome-fhir-store
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    FhirStoreName:
      description: The resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    FhirStore:
      description: A FHIR store
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store
      properties:
        name:
          description: The resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    PageOfFhirStores:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfFhirStores_allOf'
      description: A page of FHIR stores
      type: object
    FhirStoreCreateRequest:
      description: An empty object
      type: object
    FhirStoreCreateResponse:
      description: The reference to the FHIR store created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store
      properties:
        name:
          description: The resource name of the FHIR store, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    PatientId:
      description: The ID of the FHIR patient
      example: awesome-patient
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    Patient:
      description: A FHIR patient
      example:
        identifier: awesome-patient
        gender: male
      properties:
        identifier:
          description: The ID of the FHIR patient
          example: awesome-patient
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        gender:
          description: Gender of the patient
          enum:
          - male
          - female
          - other
          - unknown
          type: string
      required:
      - identifier
      type: object
    PageOfPatients:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfPatients_allOf'
      description: A page of FHIR patients
      type: object
    PatientCreateRequest:
      description: A FHIR patient
      example:
        gender: male
      properties:
        gender:
          description: Gender of the patient
          enum:
          - male
          - female
          - other
          - unknown
          type: string
      type: object
    PatientResourceName:
      description: The resource name of the FHIR patient, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Patient/{PatientId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*/Patient/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    PatientCreateResponse:
      description: The reference to the patient created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
      properties:
        name:
          description: The resource name of the FHIR patient, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Patient/{PatientId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Patient/507f1f77bcf86cd799439011
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*/Patient/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    NoteId:
      description: The ID of the clinical note
      example: awesome-note
      maxLength: 60
      minLength: 3
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    Note:
      description: A clinical note
      example:
        identifier: awesome-note
        text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.
        type: loinc:LP29684-5
        patientId: awesome-patient
      properties:
        identifier:
          description: The ID of the clinical note
          example: awesome-note
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
        text:
          description: The content of the clinical note
          type: string
        type:
          description: The note type (LOINC concept)
          type: string
        patientId:
          description: The ID of the FHIR patient
          example: awesome-patient
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - identifier
      - patientId
      - text
      - type
      type: object
    PageOfNotes:
      allOf:
      - $ref: '#/components/schemas/ResponsePageMetadata'
      - $ref: '#/components/schemas/PageOfNotes_allOf'
      description: A page of notes
      type: object
    NoteCreateRequest:
      description: A clinical note
      example:
        patientId: awesome-patient
        text: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.
        type: loinc:LP29684-5
      properties:
        text:
          description: The content of the clinical note
          example: On 12/26/2020, Ms. Chloe Price met with Dr. Prescott in Seattle.
          type: string
        type:
          description: The note type (LOINC concept)
          example: loinc:LP29684-5
          type: string
        patientId:
          description: The ID of the FHIR patient
          example: awesome-patient
          maxLength: 60
          minLength: 3
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - patientId
      - text
      - type
      type: object
    NoteResourceName:
      description: The resource name of the clinical note, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Note/{NoteId}
      example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/awesome-note
      pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*/Note/[a-z0-9]+(?:-[a-z0-9]+)*$
      type: string
    NoteCreateResponse:
      description: The reference to the note created
      example:
        name: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/awesome-note
      properties:
        name:
          description: The resource name of the clinical note, of the form datasets/{datasetId}/fhirStores/{fhirStoreId}/Note/{NoteId}
          example: datasets/awesome-dataset/fhirStores/awesome-fhir-store/Note/awesome-note
          pattern: ^datasets/[a-z0-9]+(?:-[a-z0-9]+)*/fhirStores/[a-z0-9]+(?:-[a-z0-9]+)*/Note/[a-z0-9]+(?:-[a-z0-9]+)*$
          type: string
      required:
      - name
      type: object
    HealthCheck:
      description: Represents the health of a service
      example:
        status: pass
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          enum:
          - pass
          - fail
          - warn
          type: string
      required:
      - status
      type: object
    ResponsePageMetadata_links:
      description: Links to navigate to different pages of results
      properties:
        next:
          description: Link to the next page of results
          format: uri
          type: string
      type: object
    PageOfDatasets_allOf:
      properties:
        datasets:
          description: An array of datasets
          items:
            $ref: '#/components/schemas/Dataset'
          type: array
      type: object
    PageOfAnnotationStores_allOf:
      properties:
        annotationStores:
          description: An array of annotation stores
          items:
            $ref: '#/components/schemas/AnnotationStore'
          type: array
      type: object
    TextDateAnnotation_allOf:
      properties:
        dateFormat:
          description: Date format (ISO 8601)
          example: MM/DD/YYYY
          type: string
      type: object
    TextLocationAnnotation_allOf:
      properties:
        locationType:
          description: Type of location
          enum:
          - city
          - country
          - department
          - hospital
          - organization
          - other
          - room
          - state
          - street
          - zip
          type: string
      required:
      - locationType
      type: object
    TextIdAnnotation_allOf:
      properties:
        idType:
          description: Type of ID information
          enum:
          - account
          - bio_id
          - device
          - health_plan
          - id_number
          - license
          - medical_record
          - ssn
          - vehicle
          - other
          type: string
      required:
      - idType
      type: object
    TextContactAnnotation_allOf:
      properties:
        contactType:
          description: Type of contact information
          enum:
          - email
          - fax
          - ip_address
          - phone
          - url
          - other
          type: string
      required:
      - contactType
      type: object
    TextCovidSymptomAnnotation_allOf:
      properties:
        condition:
          description: |
            The sign/symptom type according to CDC definition
          enum:
          - fever
          - chill
          - cough
          - fatigue
          - nasal_obstruction
          - loss_of_appetite
          - diarrhea
          - abdominal_pain
          - nausea
          - vomiting
          - sore_throat
          - headache
          - myalgia
          - loss_of_taste
          - loss_of_smell
          - dyspnea
          - chest_pain
          - delirium
          - hypersomnia
          - cyanosis
          type: string
        certainty:
          description: |
            Whether the annotation is positively or negatively correlated with the presence of COVID
          enum:
          - positive
          - negated
          - possible
          type: string
      required:
      - certainty
      - condition
      type: object
    PageOfAnnotations_allOf:
      properties:
        annotations:
          description: An array of annotations
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
      type: object
    PageOfFhirStores_allOf:
      properties:
        fhirStores:
          description: An array of FHIR stores
          items:
            $ref: '#/components/schemas/FhirStore'
          type: array
      type: object
    PageOfPatients_allOf:
      properties:
        patients:
          description: An array of FHIR patients
          items:
            $ref: '#/components/schemas/Patient'
          type: array
      type: object
    PageOfNotes_allOf:
      properties:
        notes:
          description: An array of notes
          items:
            $ref: '#/components/schemas/Note'
          type: array
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller_.info_from_ApiKeyAuth
